import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

/**
 * @author Lalit Kumar Bodana
 * www.fakecoders.com
 * 14-Jul-2021
 * 
 */
public class ExampleServiceImpl implements IExampleService{
	private static final Logger logger= LoggerFactory.getLogger(ExampleServiceImpl.class);
	
	@Autowired
	private IExampleRepo repository;
	
	public void setRepo(IExampleRepo repo) {
		this.setRepo(repo);
		repository = repo;
	}
	
	@Override
	public Example save(Example entity) {
		try {
			logger.info("Inside @Class ExampleServiceImpl @Method save entity {}",entity);
			return repository.save(entity);
		} catch (Exception e) {
			logger.error("Inside catch @Class ExampleServiceImpl @Method save error{}",e.getLocalizedMessage());
		}
		return null;	
	}

	@Override
	public String saveAll(Iterable entities) {
		try {
			logger.info("Inside @Class ExampleServiceImpl @Method saveAll entity {}",entities);
			 repository.saveAll(entities);
			 return "succuss";
		} catch (Exception e) {
			logger.error("Inside catch @Class ExampleServiceImpl @Method saveAll error{}",e.getLocalizedMessage());
			return "failure";
		}
	}

	@Override
	public Optional<Example> findById(Integer id) {
		logger.info("Inside @Class ExampleServiceImpl @Method findById id {}",id);
		try {
			return repository.findById(id);
		} catch (Exception e) {
			logger.error("Inside catch @Class ExampleServiceImpl @Method findById error{}",e.getLocalizedMessage());
		}
		return null;
	}

	@Override
	public boolean existsById(Integer id) {
		logger.info("Inside @Class ExampleServiceImpl @Method existsById id {}",id);
		return repository.existsById(id);
	}

	@Override
	public Iterable<Example> findAll() {
		logger.info("Inside @Class ExampleServiceImpl @Method findAll");
		return repository.findAll();
	}

	@Override
	public Iterable<Example> findAllById(Iterable<Integer> ids) {
		logger.info("Inside @Class ExampleServiceImpl @Method findAllById ids {}",ids);
		return repository.findAll();
	}

	@Override
	public long count() {
		logger.info("Inside @Class ExampleServiceImpl @Method count");
		return repository.count();
	}

	@Override
	public void deleteById(Integer id) {
		logger.info("Inside @Class ExampleServiceImpl @Method deleteById id {}",id);
		repository.deleteById(id);
	}

	@Override
	public void delete(Example entity) {
		logger.info("Inside @Class ExampleServiceImpl @Method delete entity {}",entity);
		repository.delete(entity);
	}

	@Override
	public void deleteAllById(Iterable<Integer> ids) {
		logger.info("Inside @Class ExampleServiceImpl @Method deleteAllById ids{}",ids);
		repository.deleteAllById(ids);
	}

	@Override
	public void deleteAll(Iterable<Example> entities) {
		logger.info("Inside @Class ExampleServiceImpl @Method deleteAll");
		repository.deleteAll(entities);
	}

	@Override
	public void deleteAll() {
		logger.info("Inside @Class ExampleServiceImpl @Method deleteAll");
		repository.deleteAll();
	}
}
